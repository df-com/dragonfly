// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: candlestick.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_candlestick_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_candlestick_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3021000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3021008 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_candlestick_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_candlestick_2eproto {
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_candlestick_2eproto;
namespace arc {
namespace pb {
class Candlestick;
struct CandlestickDefaultTypeInternal;
extern CandlestickDefaultTypeInternal _Candlestick_default_instance_;
}  // namespace pb
}  // namespace arc
PROTOBUF_NAMESPACE_OPEN
template<> ::arc::pb::Candlestick* Arena::CreateMaybeMessage<::arc::pb::Candlestick>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace arc {
namespace pb {

// ===================================================================

class Candlestick final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:arc.pb.Candlestick) */ {
 public:
  inline Candlestick() : Candlestick(nullptr) {}
  ~Candlestick() override;
  explicit PROTOBUF_CONSTEXPR Candlestick(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Candlestick(const Candlestick& from);
  Candlestick(Candlestick&& from) noexcept
    : Candlestick() {
    *this = ::std::move(from);
  }

  inline Candlestick& operator=(const Candlestick& from) {
    CopyFrom(from);
    return *this;
  }
  inline Candlestick& operator=(Candlestick&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Candlestick& default_instance() {
    return *internal_default_instance();
  }
  static inline const Candlestick* internal_default_instance() {
    return reinterpret_cast<const Candlestick*>(
               &_Candlestick_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(Candlestick& a, Candlestick& b) {
    a.Swap(&b);
  }
  inline void Swap(Candlestick* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Candlestick* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Candlestick* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Candlestick>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Candlestick& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const Candlestick& from) {
    Candlestick::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Candlestick* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "arc.pb.Candlestick";
  }
  protected:
  explicit Candlestick(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDatetimeFieldNumber = 1,
    kOpenFieldNumber = 2,
    kHighFieldNumber = 3,
    kLowFieldNumber = 4,
    kCloseFieldNumber = 5,
    kVolumeFieldNumber = 6,
  };
  // int64 datetime = 1;
  void clear_datetime();
  int64_t datetime() const;
  void set_datetime(int64_t value);
  private:
  int64_t _internal_datetime() const;
  void _internal_set_datetime(int64_t value);
  public:

  // float open = 2;
  void clear_open();
  float open() const;
  void set_open(float value);
  private:
  float _internal_open() const;
  void _internal_set_open(float value);
  public:

  // float high = 3;
  void clear_high();
  float high() const;
  void set_high(float value);
  private:
  float _internal_high() const;
  void _internal_set_high(float value);
  public:

  // float low = 4;
  void clear_low();
  float low() const;
  void set_low(float value);
  private:
  float _internal_low() const;
  void _internal_set_low(float value);
  public:

  // float close = 5;
  void clear_close();
  float close() const;
  void set_close(float value);
  private:
  float _internal_close() const;
  void _internal_set_close(float value);
  public:

  // double volume = 6;
  void clear_volume();
  double volume() const;
  void set_volume(double value);
  private:
  double _internal_volume() const;
  void _internal_set_volume(double value);
  public:

  // @@protoc_insertion_point(class_scope:arc.pb.Candlestick)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    int64_t datetime_;
    float open_;
    float high_;
    float low_;
    float close_;
    double volume_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_candlestick_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Candlestick

// int64 datetime = 1;
inline void Candlestick::clear_datetime() {
  _impl_.datetime_ = int64_t{0};
}
inline int64_t Candlestick::_internal_datetime() const {
  return _impl_.datetime_;
}
inline int64_t Candlestick::datetime() const {
  // @@protoc_insertion_point(field_get:arc.pb.Candlestick.datetime)
  return _internal_datetime();
}
inline void Candlestick::_internal_set_datetime(int64_t value) {
  
  _impl_.datetime_ = value;
}
inline void Candlestick::set_datetime(int64_t value) {
  _internal_set_datetime(value);
  // @@protoc_insertion_point(field_set:arc.pb.Candlestick.datetime)
}

// float open = 2;
inline void Candlestick::clear_open() {
  _impl_.open_ = 0;
}
inline float Candlestick::_internal_open() const {
  return _impl_.open_;
}
inline float Candlestick::open() const {
  // @@protoc_insertion_point(field_get:arc.pb.Candlestick.open)
  return _internal_open();
}
inline void Candlestick::_internal_set_open(float value) {
  
  _impl_.open_ = value;
}
inline void Candlestick::set_open(float value) {
  _internal_set_open(value);
  // @@protoc_insertion_point(field_set:arc.pb.Candlestick.open)
}

// float high = 3;
inline void Candlestick::clear_high() {
  _impl_.high_ = 0;
}
inline float Candlestick::_internal_high() const {
  return _impl_.high_;
}
inline float Candlestick::high() const {
  // @@protoc_insertion_point(field_get:arc.pb.Candlestick.high)
  return _internal_high();
}
inline void Candlestick::_internal_set_high(float value) {
  
  _impl_.high_ = value;
}
inline void Candlestick::set_high(float value) {
  _internal_set_high(value);
  // @@protoc_insertion_point(field_set:arc.pb.Candlestick.high)
}

// float low = 4;
inline void Candlestick::clear_low() {
  _impl_.low_ = 0;
}
inline float Candlestick::_internal_low() const {
  return _impl_.low_;
}
inline float Candlestick::low() const {
  // @@protoc_insertion_point(field_get:arc.pb.Candlestick.low)
  return _internal_low();
}
inline void Candlestick::_internal_set_low(float value) {
  
  _impl_.low_ = value;
}
inline void Candlestick::set_low(float value) {
  _internal_set_low(value);
  // @@protoc_insertion_point(field_set:arc.pb.Candlestick.low)
}

// float close = 5;
inline void Candlestick::clear_close() {
  _impl_.close_ = 0;
}
inline float Candlestick::_internal_close() const {
  return _impl_.close_;
}
inline float Candlestick::close() const {
  // @@protoc_insertion_point(field_get:arc.pb.Candlestick.close)
  return _internal_close();
}
inline void Candlestick::_internal_set_close(float value) {
  
  _impl_.close_ = value;
}
inline void Candlestick::set_close(float value) {
  _internal_set_close(value);
  // @@protoc_insertion_point(field_set:arc.pb.Candlestick.close)
}

// double volume = 6;
inline void Candlestick::clear_volume() {
  _impl_.volume_ = 0;
}
inline double Candlestick::_internal_volume() const {
  return _impl_.volume_;
}
inline double Candlestick::volume() const {
  // @@protoc_insertion_point(field_get:arc.pb.Candlestick.volume)
  return _internal_volume();
}
inline void Candlestick::_internal_set_volume(double value) {
  
  _impl_.volume_ = value;
}
inline void Candlestick::set_volume(double value) {
  _internal_set_volume(value);
  // @@protoc_insertion_point(field_set:arc.pb.Candlestick.volume)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace pb
}  // namespace arc

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_candlestick_2eproto
